#include <iostream>
#include <filesystem>

#define KEY "qwertyuiopasdfgh"      // 128-bit key


void folder_pass(const std::string& folder, const std::string& key, const char& mode);
void crypt_one_file(const std::string& folder, const std::string& key);


int main() {
    std::string folder = "./test";
    char mode = '\0';

    std::cout << "Please, enter path for crypt/decrypt:\n";
    std::cin >> folder;
    while (mode != 'e' && mode != 'd')
    {
        std::cout << "Choose mode (e/d): ";
        std::cin >> mode;

        if (mode != 'e' && mode != 'd')
        {
            std::cout << "Please enter only 'e' or 'd'!!!\n";
        }

        else
        {
            folder_pass(folder, KEY, mode);
        }
    }
}


void folder_pass(const std::string& folder, const std::string& key, const char& mode) 
{
    std::filesystem::directory_iterator main_iter(folder);      // Current iterator
    std::filesystem::directory_iterator end_iter;               // End of folder

    if (main_iter == end_iter)      // Empty folder
    {
        return;
    }

    for (; main_iter != end_iter; main_iter++)
    {
        if (std::filesystem::is_directory(main_iter->path().string()))
        {
            folder_pass(main_iter->path().string(), key, mode);
        }

        else
        {
            if (mode == 'e')
                crypt_one_file(main_iter->path().string(), key);

            else 
                crypt_one_file(main_iter->path().string(), key);
        }
    }

}